import{y as M,r as s,c as i}from"./index-Cz9aqF_s.js";const J=M("bot",()=>{const r=s([]),u=s(null),a=s(!1),n=s(null),l=s(!1),f=s(""),d=s(localStorage.getItem("darkMode")==="true"),h=s({count:0,sum:0,average:0}),p=i(()=>r.value.filter(t=>t[0])),w=i(()=>t=>r.value.find(e=>e[1]===t)),y=i(()=>r.value.reduce((t,e)=>t+e[7],0).toFixed(2)),v=i(()=>r.value.reduce((t,e)=>t+e[6],0).toFixed(2)),g=i(()=>r.value.reduce((t,e)=>t+e[3],0).toFixed(2)),m=i(()=>r.value.reduce((t,e)=>t+e[5],0).toFixed(2));async function c(){a.value=!0;try{const t=await fetch("/api/bots",{method:"GET",headers:{"Content-Type":"application/json"}});if(!t.ok)throw new Error("Failed to fetch bot status");return await t.json()}catch(t){throw n.value=t.message,t}finally{a.value=!1}}async function S(t){a.value=!0;try{const e=await fetch("/api/bot/"+String(t),{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error("Failed to fetch bot status");return await e.json()}catch(e){throw n.value=e.message,e}finally{a.value=!1}}async function T(t,e){a.value=!0;try{const o=await fetch(`/api/bots/${t}/settings`,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!o.ok)throw new Error("Failed to update bot settings");return await o.json()}catch(o){throw n.value=o.message,o}finally{a.value=!1}}async function b(t){a.value=!0;try{const e=await fetch("/api/botreset/"+String(t),{method:"POST",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error("Failed to reset bot");return await e.json()}catch(e){throw n.value=e.message,e}finally{a.value=!1}}async function B(t,e){a.value=!0;try{const o=await fetch("/api/floor_edit/"+String(t),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(!o.ok)throw new Error("Failed to reset bot");return await o.json()}catch(o){throw n.value=o.message,o}finally{a.value=!1}}async function j(t){a.value=!0;try{const e=await fetch(`/api/bots/${t}/panic-sale`,{method:"POST",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error("Failed to execute panic sale");return await e.json()}catch(e){throw n.value=e.message,e}finally{a.value=!1}}async function E(t,e){a.value=!0;try{if(!(await fetch("/api/onoff/"+String(t),{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({botId:t,active:e})})).ok)throw new Error("Failed to toggle bot status");await c()}catch(o){throw n.value=o.message,o}finally{a.value=!1}}async function k(t){a.value=!0;try{if(!(await fetch(`/api/bot/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json"}})).ok)throw new Error("Failed to delete bot");await c()}catch(e){throw n.value=e.message,e}finally{a.value=!1}}async function F(t){a.value=!0;try{const e=await fetch("/api/bot_create",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok)throw new Error("Failed to create bot");const o=await e.json();return r.value.push(o),o}catch(e){throw n.value=e.message,e}finally{a.value=!1}}function C(t){u.value=t,f.value=t?t[1]:""}function O(){l.value=!l.value}function P(t){d.value=t,localStorage.setItem("darkMode",t)}function x(){n.value=null}return{bots:r,selectedBot:u,loading:a,error:n,showMenu:l,selectedBotName:f,darkMode:d,tradesStats:h,activeBots:p,getBotById:w,totalBalance:y,totalStartBalance:v,totalProfit:g,todayProfit:m,fetchBots:c,fetchBotStatus:S,updateBotSettings:T,resetBot:b,panicSale:j,toggleBot:E,deleteBot:k,createBot:F,setSelectedBot:C,toggleMenu:O,setDarkMode:P,clearError:x,floorEdit:B}});export{J as u};
